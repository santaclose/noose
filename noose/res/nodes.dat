Int
[
	in:
		Integer: in
	out:
		Integer: out
]
Add ints
[
	in:
		Integer: a
		Integer: b
	out:
		Integer: out
]
Subtract ints
[
	in:
		Integer: a
		Integer: b
	out:
		Integer: out
]
Multiply ints
[
	in:
		Integer: a
		Integer: b
	out:
		Integer: out
]
Divide ints
[
	in:
		Integer: a
		Integer: b
	out:
		Integer: out
]
Int vector
[
	in:
		Vector2i: in
	out:
		Vector2i: out
]
Int vector from ints
[
	in:
		Integer: x
		Integer: y
	out:
		Vector2i: vector
]
Add int vectors
[
	in:
		Vector2i: a
		Vector2i: b
	out:
		Vector2i: out
]
Subtract int vectors
[
	in:
		Vector2i: a
		Vector2i: b
	out:
		Vector2i: out
]
Int vector times int
[
	in:
		Vector2i: a
		Integer: b
	out:
		Vector2i: out
]
Float
[
	in:
		Float: in
	out:
		Float: out
]
Add floats
[
	in:
		Float: a
		Float: b
	out:
		Float: out
]
Subtract floats
[
	in:
		Float: a
		Float: b
	out:
		Float: out
]
Multiply floats
[
	in:
		Float: a
		Float: b
	out:
		Float: out
]
Divide floats
[
	in:
		Float: a
		Float: b
	out:
		Float: out
]
Color
[
	in:
		Color: in
	out:
		Color: out
]
Color from ints
[
	in:
		Integer: r
		Integer: g
		Integer: b
		Integer: a
	out:
		Color: color
]
Image
[
	in:
		Image: in
	out:
		Image: out
		Vector2i: size
]
Separate channels
[
	in:
		Image: in
	out:
		Image: r
		Image: g
		Image: b
		Image: a
]
Combine channels
[
	in:
		Image: r
		Image: g
		Image: b
		Image: a
	out:
		Image: out
]
Solid
[
	in:
		Color: color
		Vector2i: image size
	out:
		Image: image
]
Checker
[
	in:
		Integer: square size[20]
		Vector2i: image size
	out:
		Image: result
]
Linear Gradient
[
	in:
		Vector2i: image size
	out:
		Image: result
]
Blend
[
	in:
		Image: source
		Image: destination
		Integer: mode{Alpha blend,Darken,Lighten,Add,Multiply,Difference,Screen,Color burn,Linear burn,Color dodge}
	out:
		Image: result
]
Brightness and contrast
[
	in:
		Image: in
		Float: brightness[0.0]
		Float: contrast[1.0]
	out:
		Image: out
]
Crop
[
	in:
		Image: in
		Vector2i: frame position
		Vector2i: frame size
	out:
		Image: out
]
Flip
[
	in:
		Image: in
		Integer: vertical?
	out:
		Image: out
]
Frame
[
	in:
		Image: in
		Integer: frame[10]
		Color: color
	out:
		Image: out
]
Grayscale
[
	in:
		Image: in
	out:
		Image: out
]
Invert
[
	in:
		Image: in
	out:
		Image: out
]
Mask
[
	in:
		Image: image
		Image: mask
	out:
		Image: result
]
Repeat
[
	in:
		Image: image
		Vector2i: image size
	out:
		Image: result
]
Rotate 90
[
	in:
		Image: image
		Integer: times[1]
	out:
		Image: image
]
Select by color
[
	in:
		Image: in
		Color: color
		Float: tolerance[0.5]
	out:
		Image: out
]